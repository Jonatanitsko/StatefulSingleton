name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  test-e2e:
    name: E2E Tests on Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        go-version: ["1.23", "1.24"]
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: go.sum

      - name: Clear Go module and build cache
        run: |
          rm -rf ~/.cache/go-build
          sudo rm -rf ~/go/pkg/mod

      #- name: Cache Go modules
      #  uses: actions/cache@v4
      #  with:
      #    path: |
      #      ~/.cache/go-build
      #      ~/go/pkg/mod
      #    key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
      #    restore-keys: |
      #      ${{ runner.os }}-go-${{ matrix.go-version }}-
      #      ${{ runner.os }}-go-

      - name: Install Kind
        run: |
          # Install Kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          
          # Create Kind config file
          cat <<EOF > kind-config.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 8080
              protocol: TCP
            - containerPort: 443
              hostPort: 8443
              protocol: TCP
            - containerPort: 9443
              hostPort: 9443
              protocol: TCP
          - role: worker
          - role: worker
          EOF
          
          # Create cluster
          kind create cluster --name statefulsingleton-e2e-${{ matrix.go-version }} --config kind-config.yaml
          # Install cert-manager
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.18.2/cert-manager.yaml
          kubectl wait --for=condition=available --timeout=600s deployment/cert-manager-webhook -n cert-manager

      - name: Download dependencies
        run: go mod download

      - name: Build operator image
        run: |
          make docker-build IMG=statefulsingleton:e2e-tests CONTAINER_TOOL=docker
          # Load image into kind cluster
          kind load docker-image statefulsingleton:e2e-tests --name statefulsingleton-e2e-${{ matrix.go-version }}
          # Verify image is loaded
          docker exec statefulsingleton-e2e-${{ matrix.go-version }}-control-plane crictl images | grep statefulsingleton || true

      - name: Install CRDs
        run: make install

      - name: Deploy operator
        run: |
          make deploy IMG=statefulsingleton:e2e-tests
          kubectl wait --for=condition=available --timeout=600s deployment/stateful-singleton-controller-manager -n stateful-singleton-system
 
      - name: Run E2E tests
        run: |
          export KUBECONFIG="$(kind get kubeconfig-path --name statefulsingleton-e2e-${{ matrix.go-version }} || echo ~/.kube/config)"
          CERT_MANAGER_INSTALL_SKIP=true ENABLE_WEBHOOKS=true make test-e2e
        env:
          ENABLE_WEBHOOKS: "true"

      - name: Debug on failure
        if: failure()
        run: |
          echo "=== Cluster Status ==="
          kubectl get nodes -o wide || true
          kubectl get pods -A || true
          echo "=== Operator Deployment ==="
          kubectl get deployment -n stateful-singleton-system -o wide || true
          kubectl describe deployment stateful-singleton-controller-manager -n stateful-singleton-system || true
          echo "=== Operator Pods ==="
          kubectl get pods -n stateful-singleton-system -o wide || true
          kubectl describe pods -n stateful-singleton-system || true
          echo "=== Operator Logs ==="
          kubectl logs -n stateful-singleton-system deployment/stateful-singleton-controller-manager --tail=100 || true
          echo "=== E2E test namespace ==="
          kubectl get all -n e2e-test-statefulsingleton || true

      - name: Cleanup
        if: always()
        run: |
          kind delete cluster --name statefulsingleton-e2e-${{ matrix.go-version }} || true
